openapi: "3.0.3"
info:
  title: "Test API"
  version: "1.0.0"
servers:
  - url: "https://xr-mock.jn.sfc.keio.ac.jp"
paths:
  /ping:
    get:
      summary: "Ping endpoint"
      description: "Returns a simple pong message"
      responses:
        '200':
          description: "pong response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hoooooo!!!!!!"
  /users:
    get:
      summary: "List users"
      description: "Retrieve a list of users"
      responses:
        '200':
          description: "A JSON array of user objects"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Alice"
                    time:
                      type: integer
                      example: 0
    post:
      summary: "Create a user"
      description: "Add a new user and return the created object"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                # 必須にしたい場合は以下を有効化
                # - time
              properties:
                name:
                  type: string
                  example: "Bob"
                time:
                  type: integer
                  example: 10
      responses:
        '201':
          description: "User created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "Bob"
                  time:
                    type: integer
                    example: 10
  /points:
    get:
      summary: "List points"
      description: "Retrieve a list of points"
      responses:
        '200':
          description: "A JSON array of point objects"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "origin"
                    time:
                      type: integer
                      example: 10
              example:
                - id: 1
                  name: "origin"
                  time: 10
                - id: 2
                  name: "kamoike"
                  time: 20
                - id: 3
                  name: "sigma"
                  time: 30
                - id: 4
                  name: "delta"
                  time: 40
                - id: 5
                  name: "tau"
                  time: 50
                - id: 6
                  name: "gamma"
                  time: 60
    post:
      summary: "Create a point"
      description: "Add a new point and return the created object"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - time
              properties:
                name:
                  type: string
                  example: "kamoike"
                time:
                  type: integer
                  example: 20
      responses:
        '201':
          description: "Point created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "kamoike"
                  time:
                    type: integer
                    example: 20
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Bad request"
